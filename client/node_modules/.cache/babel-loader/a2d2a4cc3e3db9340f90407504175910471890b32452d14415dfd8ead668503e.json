{"ast":null,"code":"var _jsxFileName = \"/Users/bekzat.ongdassynovicloud.com/SpotifyApp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = 'http://localhost:3001'; // Replace with your server's URL\n\nconst App = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(null);\n  const handleLogin = () => {\n    // Redirect the user to the server's login endpoint\n    window.location.href = `${SERVER_URL}/login`;\n  };\n  useEffect(() => {\n    // Handle the callback after successful login\n    const handleCallback = () => {\n      const params = new URLSearchParams(window.location.search);\n      const code = params.get('code');\n\n      // If there is a code parameter in the URL, send it to the server to get the access token\n      if (code) {\n        axios.get(`${SERVER_URL}/callback?code=${code}`).then(res => {\n          console.log('User Data:');\n          localStorage.setItem('accessToken', res.data.access_token);\n          setAccessToken(res.data.access_token);\n          // Optionally, you can save the access token in state or local storage for future use\n        }).catch(error => console.error('Error:', error));\n      }\n    };\n\n    // Call handleCallback when the component mounts to handle the callback\n    handleCallback();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spotify Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), accessToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Access Token: \", accessToken]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login with Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/xrtmJPCXv3vYgXhoOEInGM3amE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SERVER_URL","App","_s","accessToken","setAccessToken","handleLogin","window","location","href","handleCallback","params","URLSearchParams","search","code","get","then","res","console","log","localStorage","setItem","data","access_token","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/bekzat.ongdassynovicloud.com/SpotifyApp/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SERVER_URL = 'http://localhost:3001'; // Replace with your server's URL\n\nconst App = () => {\n\n  const [accessToken, setAccessToken] = useState(null)\n  const handleLogin = () => {\n    // Redirect the user to the server's login endpoint\n    window.location.href = `${SERVER_URL}/login`;\n  };\n\n  useEffect(() => {\n    // Handle the callback after successful login\n    const handleCallback = () => {\n      const params = new URLSearchParams(window.location.search);\n      const code = params.get('code');\n\n      // If there is a code parameter in the URL, send it to the server to get the access token\n      if (code) {\n        axios.get(`${SERVER_URL}/callback?code=${code}`)\n          .then(res => {\n            console.log('User Data:');\n            localStorage.setItem('accessToken', res.data.access_token)\n            setAccessToken(res.data.access_token)\n            // Optionally, you can save the access token in state or local storage for future use\n          })\n          .catch(error => console.error('Error:', error));\n      }\n    };\n\n    // Call handleCallback when the component mounts to handle the callback\n    handleCallback();\n  }, []);\n\n  return (\n    <div>\n      <h1>Spotify Authentication</h1>\n      {accessToken ? (\n        <div>\n          <p>Access Token: {accessToken}</p>\n          {/* Use the access token for other API requests or other actions */}\n        </div>\n      ) : (\n        <button onClick={handleLogin}>Login with Spotify</button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAG,uBAAuB,CAAC,CAAC;;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAI,GAAER,UAAW,QAAO;EAC9C,CAAC;EAEDL,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACL,MAAM,CAACC,QAAQ,CAACK,MAAM,CAAC;MAC1D,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC;;MAE/B;MACA,IAAID,IAAI,EAAE;QACRhB,KAAK,CAACiB,GAAG,CAAE,GAAEd,UAAW,kBAAiBa,IAAK,EAAC,CAAC,CAC7CE,IAAI,CAACC,GAAG,IAAI;UACXC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;UACzBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,GAAG,CAACK,IAAI,CAACC,YAAY,CAAC;UAC1DlB,cAAc,CAACY,GAAG,CAACK,IAAI,CAACC,YAAY,CAAC;UACrC;QACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIP,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;MACnD;IACF,CAAC;;IAED;IACAf,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9B1B,WAAW,gBACVJ,OAAA;MAAA0B,QAAA,eACE1B,OAAA;QAAA0B,QAAA,GAAG,gBAAc,EAACtB,WAAW;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/B,CAAC,gBAEN9B,OAAA;MAAQ+B,OAAO,EAAEzB,WAAY;MAAAoB,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA5CID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}